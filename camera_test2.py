import cv2
import time
from ultralytics import YOLO

MODEL_PATH = r"D:/uth-its/runs/detect/train/weights/best.pt"
model = YOLO(MODEL_PATH)

cap = cv2.VideoCapture(0)
if not cap.isOpened():
    print("‚ùå Kh√¥ng m·ªü ƒë∆∞·ª£c camera.")
    exit()

print("‚úÖ Camera s·∫µn s√†ng. Nh·∫•n Q ƒë·ªÉ tho√°t.")

prev_time = 0
frame_count = 0
predict_every_n_frames = 2  # D·ª± ƒëo√°n 1 frame / 2 frame

annotated_frame = None

while True:
    ret, frame = cap.read()
    if not ret:
        print("‚ùå Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c khung h√¨nh.")
        break

    frame_count += 1
    current_time = time.time()

    # Resize ·∫£nh v·ªÅ 416x416 ƒë·ªÉ nhanh h∆°n
    resized_frame = cv2.resize(frame, (416, 416))

    if frame_count % predict_every_n_frames == 0:
        # D·ª± ƒëo√°n tr√™n ·∫£nh resized
        results = model.predict(resized_frame, conf=0.5, verbose=False, imgsz=416)

        # V·∫Ω khung k·∫øt qu·∫£ tr√™n ·∫£nh resized
        annotated_frame_resized = results[0].plot()

        # Ph√≥ng to l·∫°i khung k·∫øt qu·∫£ v·ªÅ k√≠ch th∆∞·ªõc g·ªëc (640x480 ho·∫∑c t∆∞∆°ng t·ª±)
        annotated_frame = cv2.resize(annotated_frame_resized, (frame.shape[1], frame.shape[0]))

    # N·∫øu ch∆∞a c√≥ frame nh·∫≠n di·ªán th√¨ d√πng ·∫£nh g·ªëc
    if annotated_frame is None:
        annotated_frame = frame.copy()

    # T√≠nh FPS trung b√¨nh
    fps = 1 / (current_time - prev_time) if prev_time != 0 else 0
    prev_time = current_time

    # Hi·ªÉn th·ªã FPS
    cv2.putText(annotated_frame, f"FPS: {fps:.2f}", (10, 30),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

    cv2.imshow("üö¶ Traffic Sign Detection", annotated_frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
